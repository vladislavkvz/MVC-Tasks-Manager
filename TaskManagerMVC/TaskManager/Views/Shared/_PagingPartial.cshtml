@model TaskManager.VIewModels.Pager

@{
    string currentPageTemplate = Url.Action(Model.Action, Model.Controller) + "?";
    string pageSizeTemplate = Url.Action(Model.Action, Model.Controller) + "?";
    foreach (var i in this.Request.QueryString.Keys)
    {
        if (i.ToString() != Model.Prefix + "CurrentPage")
        {
            currentPageTemplate += i.ToString() + "=" + Request[@i.ToString()] + "&";
        }

        if (i.ToString() != Model.Prefix + "PageSize" && i.ToString() != Model.Prefix + "CurrentPage")
        {
            pageSizeTemplate += i.ToString() + "=" + Request[@i.ToString()] + "&";
        }
    }
    foreach (var i in this.Request.Form.Keys)
    {
        currentPageTemplate += i.ToString() + "=" + Request[@i.ToString()] + "&";
        pageSizeTemplate += i.ToString() + "=" + Request[@i.ToString()] + "&";
    }
}
<!-- there is a potential bug here. If a param comes from the route data it's not a named parameter and can't be accessed through the Request! -->
@if (Model.EndPage > 0)
{
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li>
                <a href="@currentPageTemplate@(Model.Prefix + "CurrentPage=" + 1)">First</a>
            </li>
            <li>
                <a href="@currentPageTemplate@(Model.Prefix + "CurrentPage=" + (Model.CurrentPage-1) )">Previous</a>
            </li>
        }

        @for (var page = Model.StartPage; page <= Model.EndPage; page++)
        {
            <li class="@(page == Model.CurrentPage ? "active" : "")">
                <a href="@currentPageTemplate@(Model.Prefix + "CurrentPage=" + page)">@page.ToString()</a>
            </li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li>
                <a href="@currentPageTemplate@(Model.Prefix + "CurrentPage=" + (Model.CurrentPage+1) )">Next</a>
            </li>
            <li>
                <a href="@currentPageTemplate@(Model.Prefix + "CurrentPage=" + Model.TotalPages  )">Last</a>
            </li>
        }
        <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Model.PageSize<b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <a href="@pageSizeTemplate@(Model.Prefix + "CurrentPage=1")&@(Model.Prefix + "PageSize=" + 1)">1</a>
                </li>
                <li>
                    <a href="@pageSizeTemplate@(Model.Prefix + "CurrentPage=1")&@(Model.Prefix + "PageSize=" + 5)">5</a>
                </li>
                <li>
                    <a href="@pageSizeTemplate@(Model.Prefix + "CurrentPage=1")&@(Model.Prefix + "PageSize=" + 10)">10</a>
                </li>
                <li>
                    <a href="@pageSizeTemplate@(Model.Prefix + "CurrentPage=1")&@(Model.Prefix + "PageSize=" + 15)">15</a>
                </li>
                <li>
                    <a href="@pageSizeTemplate@(Model.Prefix + "CurrentPage=1")&@(Model.Prefix + "PageSize=" + 20)">20</a>
                </li>
            </ul>
        </li>
    </ul>
}            